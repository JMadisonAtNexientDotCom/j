

UPDATE:2015.10.28:
//UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU//
"composites" might be better labeled as "pojos".
As I have been working on this, and everything has been
coming together. I've noticed that these "composite" objects tend
to be the [object/pojo] versions of my [table-entities/database-record-structs]
//UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU//

REFACTOR NOTE / TODO:
//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR
Composite would be better named "COLLECTION TYPE ENTITIES" or something.
Because they are uniform.

Then our bundleTypes... Might want a better name too....
//RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR

Composites are entities that are made by compositing other entities
together. An example is a riddle on a riddle-exam.

They have no direct representation in the database.

THEY DO NOT HAVE ANY META-DATA!!!
All of the properties within the composite must be references
to actual [entities/tables].

Entities like this will make JSON responses that are used on
our .html test pages easier.

.HTML pages will eventually need to be .jsp.
But one step at a time!